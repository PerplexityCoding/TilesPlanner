{"version":3,"sources":["webpack:///src/components/Tile.vue","webpack:///./src/main.js","webpack:///./src/components/Tile.vue?cb9b","webpack:///./src/components/Tile.vue"],"names":["module","exports","name","__webpack_require__","console","log","__WEBPACK_IMPORTED_MODULE_4_vue__","component","props","template","methods","dblclick","this","$emit","gridTile","drop","e","tile","JSON","parse","dataTransfer","getData","dragover","preventDefault","computed","style","grid-column","column","grid-row","row","el","created","load","board","gridTiles","initGridTiles","loadWorkspaces","getWorkspaceIdFromHash","create","hash","location","length","split","guid","save","workspaceId","selectWorkspaceId","localStorage","setItem","stringify","map","resetBoard","workspace","getItem","updateCountByTiles","keys","Object","workspaces","s","selectedWorkspace","selectWorkspace","newWorkspace","newWorkspaceId","push","deleteWorkspace","currentIdx","indexOf","splice","removeItem","j","columns","i","rows","id","gridTilesId","getFirstEmptyTile","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","deleteTile","set","addTile","dropTile","s4","Math","floor","random","toString","substring","toggleDesignerMod","designerMod","countByTiles","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","countByTile","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","toolBox","tiles","toolBoxTile","count","data","tilesId","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","attrs","src","imgHref","draggable","on","click","dragstart","staticRenderFns","__vue_template_functional__","__vue_styles__","__vue_scopeId__","__vue_module_identifier__","Component","component_normalizer","Tile","__webpack_exports__"],"mappings":"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","file":"js/app.4469d2d7.js","sourcesContent":["<template>\r\n    <div class=\"tileItem\">\r\n        <span class=\"tileCount\">{{tile.count}}</span>\r\n        <img class=\"item\" :src=\"imgHref\" v-on:click=\"click\" v-on:dragstart=\"dragstart\" draggable=\"true\"></img>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    module.exports = {\r\n        props: ['tile'],\r\n        methods: {\r\n            click() {\r\n                this.$emit('tile-click', {\r\n                    name: this.tile.name\r\n                });\r\n            },\r\n            dragstart(e) {\r\n                e.dataTransfer.setData('tile', JSON.stringify({\r\n                    name: this.tile.name\r\n                }))\r\n            }\r\n        },\r\n        computed: {\r\n            imgHref() {\r\n                return `img/${this.tile.name}.png`;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tile.vue","import { Vue } from 'vue';\r\nconst TileComponent = require('./components/Tile.vue');\r\n\r\nconsole.log(Vue);\r\n\r\nVue.component('gridTile', {\r\n    props: ['gridTile'],\r\n    template: `<li :style=\"style\"\r\n                    v-on:dblclick=\"dblclick\"\r\n                    v-on:drop=\"drop\"\r\n                    v-on:dragover=\"dragover\"\r\n                >\r\n                   <tile v-if=\"gridTile.tile\" :tile=\"gridTile.tile\"></tile>\r\n               </li>`,\r\n    methods: {\r\n        dblclick() {\r\n            this.$emit('grid-tile-dblclick', this.gridTile);\r\n        },\r\n        drop(e) {\r\n            const tile = JSON.parse(e.dataTransfer.getData('tile'));\r\n            this.$emit('tile-drop-on-grid-tile', this.gridTile, tile);\r\n        },\r\n        dragover(e) {\r\n            e.preventDefault();\r\n        }\r\n    },\r\n    computed: {\r\n        style() {\r\n            return {\r\n                \"grid-column\": this.gridTile.column,\r\n                \"grid-row\": this.gridTile.row\r\n            };\r\n        }\r\n    }\r\n});\r\n\r\nnew Vue({\r\n    el: '#app',\r\n    created() {\r\n        this.load();\r\n        if (!this.board.gridTiles) {\r\n            this.initGridTiles();\r\n        }\r\n        this.loadWorkspaces();\r\n    },\r\n    methods: {\r\n        getWorkspaceIdFromHash(create) {\r\n            let hash = location.hash;\r\n            if (hash && hash.length > 1) {\r\n                hash = hash.split('#')[1];\r\n                return hash;\r\n            } else if (create) {\r\n                return this.guid();\r\n            }\r\n            return null;\r\n        },\r\n        save() {\r\n            let workspaceId = this.getWorkspaceIdFromHash(true);\r\n            this.selectWorkspaceId(workspaceId);\r\n            localStorage.setItem('workspace-' + workspaceId, JSON.stringify({\r\n                gridTiles: this.board.gridTiles.map((gridTile) => {\r\n                    return {\r\n                        tile: gridTile.tile,\r\n                        column: gridTile.column,\r\n                        row: gridTile.row\r\n                    };\r\n                })\r\n            }));\r\n        },\r\n        resetBoard() {\r\n            this.board = {\r\n                gridTiles: []\r\n            };\r\n        },\r\n        load() {\r\n            let workspaceId = this.getWorkspaceIdFromHash();\r\n            if (workspaceId) {\r\n                let workspace = localStorage.getItem('workspace-' + workspaceId);\r\n                if (workspace) {\r\n                    this.board = JSON.parse(workspace);\r\n                } else {\r\n                    this.resetBoard();\r\n                }\r\n                this.selectWorkspaceId(workspaceId);\r\n            } else {\r\n                this.resetBoard();\r\n            }\r\n            this.updateCountByTiles();\r\n        },\r\n        loadWorkspaces() {\r\n            let keys = Object.keys(localStorage);\r\n            if (keys) {\r\n                this.workspaces = keys.map((s) => {\r\n                    return s.split('workspace-')[1];\r\n                });\r\n            }\r\n        },\r\n        selectWorkspaceId(workspaceId) {\r\n            this.selectedWorkspace = workspaceId;\r\n            location.hash = this.selectedWorkspace;\r\n        },\r\n        selectWorkspace() {\r\n            this.selectWorkspaceId(this.selectedWorkspace);\r\n            this.load();\r\n        },\r\n        newWorkspace() {\r\n            let newWorkspaceId = this.guid();\r\n\r\n            this.workspaces.push(newWorkspaceId);\r\n            this.selectWorkspaceId(newWorkspaceId);\r\n\r\n            this.load();\r\n            this.initGridTiles();\r\n            this.save();\r\n        },\r\n        deleteWorkspace() {\r\n            let currentIdx = this.workspaces.indexOf(this.selectedWorkspace);\r\n\r\n            this.workspaces.splice(currentIdx, 1);\r\n            localStorage.removeItem('workspace-' + this.selectedWorkspace);\r\n\r\n            if (this.workspaces.length > 0) {\r\n                this.selectWorkspaceId(this.workspaces[currentIdx > 0 ? currentIdx - 1 : 0]);\r\n            } else {\r\n                this.selectWorkspaceId('');\r\n            }\r\n\r\n            this.load();\r\n        },\r\n        initGridTiles() {\r\n            let gridTiles = [];\r\n            for (let j = 1; j <= this.columns; j++) {\r\n                for (let i = 1; i <= this.rows; i++) {\r\n                    gridTiles.push({\r\n                        id: this.gridTilesId++,\r\n                        row: i,\r\n                        column: j\r\n                    });\r\n                }\r\n            }\r\n            this.board.gridTiles = gridTiles;\r\n        },\r\n        getFirstEmptyTile() {\r\n            for (let gridTile of this.board.gridTiles) {\r\n                if (! gridTile.tile) {\r\n                    return gridTile;\r\n                }\r\n            }\r\n        },\r\n        deleteTile(gridTile) {\r\n            Vue.set(gridTile, 'tile', null);\r\n            this.save();\r\n            this.updateCountByTiles();\r\n        },\r\n        addTile(tile) {\r\n            let gridTile = this.getFirstEmptyTile();\r\n            Vue.set(gridTile, 'tile', tile);\r\n            this.save();\r\n            this.updateCountByTiles();\r\n        },\r\n        dropTile(gridTile, tile) {\r\n            Vue.set(gridTile, 'tile', tile);\r\n            this.save();\r\n            this.updateCountByTiles();\r\n        },\r\n        guid() {\r\n            function s4() {\r\n                return Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1);\r\n            }\r\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n        },\r\n        toggleDesignerMod() {\r\n            this.designerMod = !this.designerMod;\r\n        },\r\n        updateCountByTiles() {\r\n            let countByTiles = {};\r\n            for (let gridTiles of this.board.gridTiles) {\r\n                let tile = gridTiles.tile;\r\n                if (tile) {\r\n                    let countByTile = countByTiles[tile.name];\r\n                    countByTiles[tile.name] = countByTile ? countByTile + 1 : 1;\r\n                }\r\n            }\r\n\r\n            for (let toolBoxTile of this.toolBox.tiles) {\r\n                let count = countByTiles[toolBoxTile.name] || 0;\r\n                if (toolBoxTile.count != count) {\r\n                    Vue.set(toolBoxTile, 'count', count);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    data: {\r\n        tilesId: 0,\r\n        gridTilesId: 0,\r\n        rows: 3,\r\n        columns: 10,\r\n        selectedWorkspace: '',\r\n        workspaces: [],\r\n        designerMod: true,\r\n        board: {\r\n            gridTiles: []\r\n        },\r\n        toolBox: {\r\n            tiles: [\r\n                {\r\n                    name: 'carreblanc'\r\n                },\r\n                {\r\n                    name: 'carrenoir'\r\n                },\r\n                {\r\n                    name: 'carrenoirblue'\r\n                },\r\n                {\r\n                    name: 'cercle'\r\n                },\r\n                {\r\n                    name: 'etoilecarre'\r\n                },\r\n                {\r\n                    name: 'flacon'\r\n                },\r\n                {\r\n                    name: 'flaconneige'\r\n                },\r\n                {\r\n                    name: 'fleur'\r\n                },\r\n                {\r\n                    name: 'fleurexotique'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tileItem\"},[_c('span',{staticClass:\"tileCount\"},[_vm._v(_vm._s(_vm.tile.count))]),_c('img',{staticClass:\"item\",attrs:{\"src\":_vm.imgHref,\"draggable\":\"true\"},on:{\"click\":_vm.click,\"dragstart\":_vm.dragstart}})])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0950eb74\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Tile.vue\n// module id = null\n// module chunks = ","/* script */\nexport * from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"D:\\\\\\\\workspaces\\\\\\\\TilesPlanner\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tile.vue\"\nimport __vue_script__ from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"D:\\\\\\\\workspaces\\\\\\\\TilesPlanner\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tile.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0950eb74\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Tile.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Tile.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}